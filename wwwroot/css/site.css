html {
    font-size: 14px;
    position: relative;
    min-height: 100%;
}

/* This is a media query in CSS. 
    It checks if the viewport's width is 768 pixels or more.
    If the viewport width is 768px or more, it applies the specified styles.
    In this case, it sets the font size of all HTML elements to 16 pixels. 
    This is typically used for responsive design to adjust styling for larger screens, such as tablets or desktops. */
@media (min-width: 768px) {
    html {
        font-size: 16px;
    }
}
}


body {
    margin-bottom: 60px;
    background-image: url("../imgs/img1.png");
    background-repeat: no-repeat;
    background-position: center;
}



/* Applies to the <figure> element. 
    It sets the figure to be an inline-block, which allows it to sit alongside other elements horizontally, rather than on a new line like a block element. 
    Additionally, it adds a margin of 25 pixels on all sides, providing space around the figure element. */
figure {
    display: inline-block;
    margin: 25px;
}

    /* Targets <img> elements inside <figure>. 
       It aligns the image to the top of the inline-block, ensuring that the top edge of the image aligns with the top edge of other inline content within the block. */
    figure img {
        vertical-align: top;
    }

    /* Applies to <figcaption> elements inside <figure>. It centers the text of the figcaption, which is typically a caption or description for the image. 
        This ensures that the caption text is centered under the image. */
    figure figcaption {
        text-align: center;
    }



/* This CSS style is for a '.popup' class, typically used for modal or popup elements. */
.popup {
    display: none; /* Initially keeps the popup hidden */
    position: fixed; /* Fixes the popup's position relative to the viewport, so it stays in place even when the page is scrolled */
    left: 0; /* Aligns the popup to the left edge of the viewport */
    top: 0; /* Aligns the popup to the top edge of the viewport */
    width: 100%; /* Ensures the popup stretches across the full width of the viewport */
    height: 100%; /* Ensures the popup stretches across the full height of the viewport */
    background-color: rgba(0,0,0,0.7); /* Semi-transparent black background dims the content behind the popup */
    z-index: 1000; /* A high z-index value to ensure the popup appears above all other content */
    overflow: auto; /* Enables scrolling inside the popup if its content exceeds the popup's height */
}


/* This CSS style is for a '.popup-content' class, typically used for the content area of a modal or popup. */

.popup-content {
    width: 300px; /* Sets a fixed width for the content area of the popup */
    margin: 10% auto; /* Centers the content area vertically in the viewport and horizontally within its parent element */
    padding: 20px; /* Adds padding inside the content area for spacing between content and borders */
    background-color: #fff; /* Sets the background color of the content area to white */
    position: relative; /* Sets the position context to relative, allowing child elements to be positioned relative to this element */
    box-shadow: 0 4px 6px rgba(0,0,0,0.1); /* Adds a subtle shadow to the content area for a layered visual effect */
}


/* CSS for MoonPhase/index  */

.moon-container {
    text-align: center;
    position: relative;
    top: 50%;
}

.moon-image {
    max-width: 100%;
    height: auto;
    margin: 0 auto;
    display: block;
}

.moon-data {
    color: #4a5a6a; /* A pretty color for the text */
    font-family: 'Arial', sans-serif; /* A nice font */
    margin-top: 20px; /* Spacing between the image and the data */
}

    .moon-data p {
        margin: 5px 0;
    }

        .moon-data p span {
            color: #6c7ae0; /* A different color for the data values */
            font-weight: bold; /* Make the data values bold */
        }